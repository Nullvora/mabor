[package]
authors = ["nathanielsimard <nathaniel.simard.42@gmail.com>"]
categories = ["science", "no-std", "embedded", "wasm"]
description = "Ndarray backend for the Burn framework"
documentation = "https://docs.rs/burn-ndarray"
edition.workspace = true
keywords = ["deep-learning", "machine-learning", "data"]
license.workspace = true
name = "burn-ndarray"
readme.workspace = true
repository = "https://github.com/tracel-ai/burn/tree/main/crates/burn-ndarray"
version.workspace = true

[features]
default = ["std"]
doc = ["default"]
std = [
    "burn-autodiff",
    "burn-common/std",
    "burn-common/rayon",
    "burn-tensor/std",
    "burn-ir/std",
    "matrixmultiply/std",
    "matrixmultiply/threading",
    "ndarray/rayon",
    "ndarray/std",
    "rand/std",
    "num-traits/std",
    "pulp/std",
    "macerator/std",
]

blas-accelerate = [
    "blas-src/accelerate", # Accelerate framework (macOS only)
    "ndarray/blas",
]
blas-netlib = ["blas-src/netlib", "ndarray/blas"]
blas-openblas = ["blas-src/openblas", "ndarray/blas", "openblas-src"]
blas-openblas-system = [
    "blas-src/openblas",
    "ndarray/blas",
    "openblas-src/system",
]

[dependencies]

# ** Please make sure all dependencies support no_std when std is disabled **

burn-autodiff = { path = "../burn-autodiff", version = "0.17.0", default-features = false, optional = true }
burn-common = { path = "../burn-common", version = "0.17.0", default-features = false }
burn-ir = { path = "../burn-ir", version = "0.17.0", default-features = false }
burn-tensor = { path = "../burn-tensor", version = "0.17.0", default-features = false }

atomic_float = { workspace = true }
blas-src = { workspace = true, default-features = false, optional = true } # no-std compatible
bytemuck = { workspace = true }
derive-new = { workspace = true }
libm = { workspace = true }
macerator = { workspace = true }
matrixmultiply = { workspace = true, default-features = false }
ndarray = { workspace = true }
num-traits = { workspace = true }
openblas-src = { workspace = true, optional = true }
paste = { workspace = true }
pulp = { workspace = true, features = ["macro", "x86-v3"] }
rand = { workspace = true }
spin = { workspace = true }                                                # using in place of use std::sync::Mutex;
tracing = "0.1"

[target.'cfg(not(target_has_atomic = "ptr"))'.dependencies]
portable-atomic-util = { workspace = true }

[dev-dependencies]
burn-autodiff = { path = "../burn-autodiff", version = "0.17.0", default-features = false, features = [
    "export_tests",
] }
burn-tensor = { path = "../burn-tensor", version = "0.17.0", default-features = false, features = [
    "export_tests",
] }

[package.metadata.docs.rs]
features = ["doc"]
rustdoc-args = ["--cfg", "docsrs"]
