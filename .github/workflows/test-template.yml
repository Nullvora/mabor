on:
  workflow_call:
    inputs:
      crate:
        required: true
        type: string
      args-doc:
        required: false
        type: string
      args-format:
        required: false
        type: string
      args-test:
        required: false
        type: string
      args-clippy:
        required: false
        type: string
      test-no-default-feature:
        required: false
        type: boolean
      no-std-build-targets:
        required: false
        type: boolean
      run-doc-test:
        required: false
        type: boolean
        default: true

jobs:
  test-crate:
    runs-on: ubuntu-latest
    env:
      CRATE: ${{ inputs.crate }}
      ARGS_DOC: ${{ inputs.args-doc }}
      ARGS_FORMAT: ${{ inputs.args-format }}
      ARGS_TEST: ${{ inputs.args-test }}
      ARGS_CLIPPY: ${{ inputs.args-clippy }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: check doc
        if: ${{ inputs.run-doc-test }}
        run: |
          cd ${CRATE}
          cargo test --doc ${ARGS_DOC}

      - name: check format
        run: |
          cd ${CRATE}
          cargo fmt --check --all ${ARGS_FORMAT}

      - name: check test
        run: |
          cd ${CRATE}
          cargo test --tests ${ARGS_TEST}

      - name: check test with no default features
        if: ${{ inputs.test-no-default-feature }}
        run: |
          cd ${CRATE}
          cargo test --no-default-features --tests ${ARGS_TEST}

      - name: install wasm32 and arm-cortex-m3 targets
        if: ${{ inputs.no-std-build-targets }}
        run: |
          rustup target add wasm32-unknown-unknown
          rustup target add thumbv7m-none-eabi

      - name: check build for wasm32
        if: ${{ inputs.no-std-build-targets }}
        run: |
          cd ${CRATE}
          cargo build --no-default-features --target wasm32-unknown-unknown

      - name: check build for arm cortex-m3
        if: ${{ inputs.no-std-build-targets }}
        run: |
          cd ${CRATE}
          cargo build --no-default-features --target thumbv7m-none-eabi

      - name: check clippy
        run: |
          cargo clippy -p ${CRATE} -- -D warnings ${ARGS_CLIPPY}
