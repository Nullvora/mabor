name: test

on:
  push:
    branches:
      - main
    paths:
      - '**.rs'
      - '**.sh'
      - '**.ps1'
      - '**.yml'
      - 'Cargo.toml'
      - '!**.md'
      - '!LICENSE-APACHE'
      - '!LICENSE-MIT'
  pull_request:
    types: [opened, synchronize]
    paths:
      - '**.rs'
      - '**.sh'
      - '**.ps1'
      - '**.yml'
      - 'Cargo.toml'
      - '!**.md'
      - '!LICENSE-APACHE'
      - '!LICENSE-MIT'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, 1.71.0]
        test: ['std', 'no-std', 'examples']
        include:
          - cache: stable
            rust: stable
          - cache: 1-71-0
            rust: 1.71.0
          - coverage-flags: RUSTFLAGS="-Cinstrument-coverage" LLVM_PROFILE_FILE="burn-%p-%m.profraw"
            rust: stable
            test: std
        exclude:
          # only need to check this once
          - rust: 1.71.0
            test: 'examples'

    steps:

      - name: checkout
        uses: actions/checkout@v4

      - name: install rust
        uses: dtolnay/rust-toolchain@master
        with:
          components: rustfmt, clippy
          toolchain: ${{ matrix.rust }}

      - name: caching
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ runner.os }}-${{ matrix.cache }}-${{ matrix.test}}-${{ hashFiles('**/Cargo.toml') }}
          prefix-key: "v5-rust"

      - name: free disk space
        run: |
          df -h
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          df -h
          cargo clean --package burn-tch

      - name: install llvmpipe and lavapipe
        run: |
          sudo apt-get update -y -qq
          sudo add-apt-repository ppa:kisak/kisak-mesa -y
          sudo apt-get update
          sudo apt install -y libegl1-mesa libgl1-mesa-dri libxcb-xfixes0-dev mesa-vulkan-drivers

      - name: Run cargo clippy for stable version
        if: matrix.rust == 'stable' && matrix.test == 'std'
        uses: giraffate/clippy-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Run clippy for each workspace, targets, and featrues, considering
          # warnings as errors
          clippy_flags: --workspace --all-targets --all-features -- -D warnings
          reporter: github-pr-check

      - name: Install grcov
        if: matrix.rust == 'stable' && matrix.test == 'std'
        env:
          GRCOV_LINK: https://github.com/mozilla/grcov/releases/download
          GRCOV_VERSION: v0.8.18
        run: |
          curl -L "$GRCOV_LINK/$GRCOV_VERSION/grcov-x86_64-unknown-linux-musl.tar.bz2" |
          tar xj -C $HOME/.cargo/bin

      - name: Install llvm-tools-preview
        if: matrix.rust == 'stable' && matrix.test == 'std'
        run: |
          rustup component add llvm-tools-preview

      - name: run checks & tests
        run: ${{ matrix.coverage-flags }} CI_RUN=1 cargo xtask run-checks ${{ matrix.test }}

      - name: Get coverage data for codecov
        if: matrix.rust == 'stable' && matrix.test == 'std'
        run: |
          grcov . --binary-path ./target/debug/ -s . -t lcov --branch \
          --ignore-not-existing --ignore "/*" --ignore "../*" \
          --ignore "xtask/*" --ignore "examples/*" -o lcov.info

      - name: Codecov upload
        if: matrix.rust == 'stable' && matrix.test == 'std'
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info

  check-typos:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: run spelling checks using typos
        run: cargo xtask run-checks typos
