name: publish

on:
  push:
    tags:        
      - '*'

jobs:
  publish-burn-tensor:
    name: publish-burn-tensor
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install rust nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
          override: true

      - name: publish burn-tensor to crates.io
        run: ./ci/publish.sh burn-tensor
        env:
          CRATES_IO_API_TOKEN: ${{ secrets.CRATES_IO_API_TOKEN }}

  publish-burn-dataset:
    name: publish-burn-dataset
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install rust nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
          override: true

      - name: publish burn-dataset to crates.io
        run: ./ci/publish.sh burn-dataset
        env:
          CRATES_IO_API_TOKEN: ${{ secrets.CRATES_IO_API_TOKEN }}

  publish-burn-derive:
    name: publish-burn-derive
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install rust nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
          override: true

      - name: publish burn-derive to crates.io
        run: ./ci/publish.sh burn-derive
        env:
          CRATES_IO_API_TOKEN: ${{ secrets.CRATES_IO_API_TOKEN }}

  publish-burn:
    needs: publish-burn-tensor
    name: publish-burn
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install rust nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
          override: true

      - name: publish burn to crates.io
        run: ./ci/publish.sh burn
        env:
          CRATES_IO_API_TOKEN: ${{ secrets.CRATES_IO_API_TOKEN }}
